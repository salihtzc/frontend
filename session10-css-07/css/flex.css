.container1{
    background-color: antiquewhite;
    display: flex;
    /*! Elemanların diziliş yönü : column=altalta block gibi, row =yanyana inline gibi, row-reverse= satırı sondan ve tersten yaz, column-reverse*/
    /* flex-direction: row; */
  
    /*? nowrap=sıkıştırma veya wrap=alt satıra geçebilme:flex-wrap: wrap, nowrap, wrap-reverse*/
    flex-wrap: wrap;
  
    /*! Yatay Hizalama: Justify-center
    /**  /** flex-start: Nesneler kapsayıcının başından başlayarak dizilirler.*/
    /**space-around: Nesneler arasında eşit boşluklar bırakılır.
    /**space-between: İlk nesne başta, son nesne sonda olacak şekilde nesneler eşit olarak kapsayıcının içerisinde dizilirler.
    /**center: Nesneler tam ortalı olacak şekilde hizalanır.
    /**flex-end: Son nesne en sağa yaslanacak şekilde hizalanır. */
    justify-content: space-around;
}

.container1 div{

background-color: tomato;
width: 5rem;
height: 5rem;
margin: 1rem;
}


.container2{

background-color: pink;
height: 20rem;    
display:flex ;
justify-content: flex-end;
align-items: baseline;
/* align-items: center; */
}


.container2 div{

background-color: cornflowerblue;
width: 5rem;
margin: 1rem;
height: 10rem;

/*sayilar kipirdasin*/
display: flex;
justify-content: center;
}


.container2 div:nth-child(1){
    height: 5rem;
}

.container2 div:nth-child(2){
    height: 7rem;
    padding-top: 4rem;
}

.container2 div:nth-child(3){
    height: 2rem;
    padding: 0.5rem;
}




  /*! Dikey Hizalama => align-items
  /**flex-start: Nesneler, kapsayıcının en üstünden başlayarak dizilirler.
/**flex-end: Nesneler, kapsayıcının en altından başlayarak, yukarı doğru dizilirler.
/**center: Nesneler ortalı bir şekilde dikey olarak sıralanırlar.
/**baseline: İlk satırdaki yazı tipi göz önüne alınarak hizalanmaya başlanılır.
/**stretch: Tüm nesneler kapsayıcı yüksekliğine eşit olacak şekilde dizilirler.
  

/** bir child element stretch ile container'ın sınırlarına dayandığında child'in içerisindeki içeriği (Örn yazı) yine dikey olarak ortaya hizalamak için nested flex yapısı kullanılabilir*/

ul{
    background-color: darkgray;
    list-style-type: none;
    height: 30rem;
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    align-content: start;
 /*!Çok satırlı verilerin dikeyde hizanmalması için kullanılır.bütün elemanlar yukarı çıkıyorlar*/
 gap: 6rem 2rem;
/*?gap, flex içerisindeki elemanların dikey ve yatay boşluklarını belirlemek için kullanılabilir. ilk yazılan yatay (satırlar arası yukarı aşağı) boşluk, 2. yazılan ise dikey (sutunlar arası, sağ sol) boşluktur */
}

ul li{
    background-color: violet;
    width: 4rem;
    height: 4rem;
    /* yazilari hizaladik */
    display: flex;
    justify-content: center;
    align-items: center;
}

.container4{
background-color: red;
display: flex;
}

.container4{
    background-color:rgb(239, 22, 22);
    display: flex;
   }
   
   .container4 div{
    background-color:yellow;
    width:5rem;
    margin:1rem ;
    /* flex-grow: 1; */
    /* child larına büyüme izni ver */
   }
        div.grow1 {
        flex-grow: 1;
        /* hepinizde default büyüme olsun */
       }
       div.grow2 {
         /*? grow2 classindakiler diğerlerine göre 2 kat daha fazla büyüyebilir.*/
         flex-grow: 2;
       }
       div.grow3 {
         /*? grow3 classindakiler diğerlerine göre 3 kat daha fazla büyüyebilir.*/
         flex-grow: 3;
       }
       div.nogrow {
         /*? nogrow classindakiler diğerlerine göre hiç büyümezler*/
         flex-grow: 0;
       }